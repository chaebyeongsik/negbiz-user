<?xml version="1.0" encoding="UTF-8"?>
<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">

    <description>OpenWorks4 Framework Core Tag Library</description>
    <tlib-version>1.1</tlib-version>
    <short-name>op</short-name>
    <uri>http://www.openworks.kr/jsp/jstl</uri>

    <!-- Pagging Tag -->

    <tag>
        <description>
        <![CDATA[
        <pre>
            &lt;table /&gt; 태그 목록에서 결과 목록이 없는 경우 메시지 및 <tr/><td/> 자동생성
            pager : 페이징 목록 객체(Pager)
            script : 페이징 결과 페이지 번호 클릭시 호출될 JavaScript 함수명 () 없이 명칭만
                     기본값 : jsMovePage
                     예: jsAlertAndMovePage
            page : 별도 UI 사용시
                  기본값 : pager/mgrPager.jsp (실제경로 /jsp/common/taglib/pager/mgrPager.jsp)

            예 : &lt;op:pager pager="${pager}" script="jsAlertAndMovePage" page="pager/webPager.jsp" /&gt;
        </pre>
        ]]>
        </description>
        <name>pager</name>
        <tag-class>zesinc.web.support.tag.ui.PagerTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>pager</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>script</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>page</name>
            <required>false</required>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
        view의 기본 값은 목록인 list가 기본 값으로 자동 설정됨
        페이지당 페이지수 값은 설정에 따라서 자동으로 설정되며,
        ${RPP_NUM} 형태로 받을 수 있다.

        사용 예 :
        페이지 목록 용      : &lt;op:pagerParam title="xxx 목록" /&gt;
        팝업 페이지 목록 용 : &lt;op:pagerParam view="plist" title="xxx 목록" /&gt;
        상세,등록,수정      : &lt;op:pagerParam view="view" /&gt;
        개별 사용           : &lt;op:pagerParam page="pager/popupListPagerParam.jsp" /&gt;
                              (실제경로 /jsp/common/taglib/pager/사용자 JSP페이지)
        특정 파라미터 제거  : &lt;op:pagerParam ignore="q_param1,q_param2" /&gt;
        특정 파라미터 접두사 사용(구분자는 쉼표로하며 공백이 없어야 한다.) :
         - 사용할 파라미터 접두사를 직접 생성하여 form 태그에 추가한다. 
           &lt;input type="hidden" name="opCustomPrefix" id="opCustomPrefix" value="q_,qq_" /&gt;
         - 아래와 같이 hidden 으로 생성할 파라미터를 customPrefix 인자로 전달한다.
           생략시에는 기존과 같이 설정상의 기본값(예 : q_)을 사용한다.
           예 : &lt;op:pagerParam view="view" customPrefix="q_,qq_" /&gt;
        </pre>
        ]]>
        </description>
        <name>pagerParam</name>
        <tag-class>zesinc.web.support.tag.ui.PagerParamTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>view</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>page</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>customPrefix</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>title</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>ignores</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            &lt;table /&gt; 태그 목록에서 결과 목록이 없는 경우 메시지 및 <tr/><td/> 자동생성
            obj : 목록 객체 (Pager, List, Array)
            colspan : <td /> 갯수
            msg : 사용자 정의 메시지. Openworks4의 다국어관리 기능 참조

            예 : &lt;op:no-data obj="${pager}" colspan="6" msg="No Data in Preparation" /&gt;
        </pre>
        ]]>
        </description>
        <name>no-data</name>
        <tag-class>zesinc.web.support.tag.ui.NoDataTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>obj</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>colspan</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>msg</name>
            <required>false</required>
        </attribute>
    </tag>

    <!-- Util Tag -->

    <tag>
        <description>
        <![CDATA[
        <pre>
        JavaScript 중 프레임워크에 직접적인 관련이 있는 것들을 관리하는 테그로
        css와 js 파일 셋트로 제공된다.
        이는 버전업 관리등을 일괄 적으로 적용하기 위해 사용한다.
        (/config/commons/javascript-commons-config.xml 파일 내용을 참조)

        * type은 현재 intra(관리자단), user(사용자단), libs 세개의 네이밍을 지원한다.
        * items 설정되지 않는 경우 base에 해당하는 항목만 자동으로 설정된다.

        사용 예 :
        &lt;op:jsTag items="jquery,validate,form" type="libs" /&gt;
        &lt;op:jsTag items="base,opvalidate" type="intra" /&gt;
        </pre>
        ]]>
        </description>
        <name>jsTag</name>
        <tag-class>zesinc.web.support.tag.ui.ScriptIncludeTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>type</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>items</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            대상 객체에서 DB field 명에 해당되는 값을 출력.
            DB Table 메타 데이터를 이용하여 VO 에서 값을 가져 오는 경우 사용.
            예 : &lt;op:bean-util obj="${baseVo}" field="FILE_ID" /&gt;
        </pre>
        ]]>
        </description>
        <name>bean-util</name>
        <tag-class>zesinc.web.support.tag.util.BeanUtilTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>obj</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>field</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            대상 문자열에서 줄바꿈 특수 문자를 웹 표시 형태인 &lt;br&gt; 로 치환
            예 : &lt;op:nrToBr content="${baseVo.content}" /&gt;
        </pre>
        ]]>
        </description>
        <name>nrToBr</name>
        <tag-class>zesinc.web.support.tag.util.NrToBr</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>content</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            코드는 text(코드명) | list | select | checkbox | radio 를 지원한다. (기본값은 아래 옵션 목록에서 확인)
            select의 경우는 tag 특성상 블럭UI를 위한 size를 가질 수 있으며 multiple를 지원한다.(multiple 은 자동 생성)

            [ 옵션 목록 ] 
                type : text(기본값) | list | select | checkbox | radio 중에 하나를 선택한다. 
                        list는 특수한 방식으로 값을 전달하므로 본 설명 하단의 예를 참조하도록 한다.
                cdId : 코드명 또는 하위코드목록을 표시 할 코드그룹
                hghrkCdId : 해당코드의 최상위 코드(코드관리 화면에서 참조)
                choice : 코드관리에서 등록한 개별코드선택자 명칭(기본값은 하위 코드 전체 사용)
                id : html tag의 name에 해당하며, id로도 사용된다. 단! radio/checkbox의 경우 id에 코드값이 추가되어 붙는다.
                values : 코드목록에서 선택되어야 할 값 목록으로 아래 3가지 유형을 사용할 수 있다.
                           1. List<String> 목록
                           2. String[] 배열
                           3. String "," 콤마로 구분
                           4. String 그냥 코드하나
                labelClass : label 태그에 사용될 css class들을 html과 같이 띄어 쓰기로 작성한다.
                          기본값
                          radio : radio-inline radio-primary
                          checked : checkbox-inline
                          select : sr-only (숨김)
                tagClass : 유형에 따른 html tag에 적용될 css class들을 html과 같이 띄어 쓰기로 작성한다.
                          기본값
                          radio : styled
                          checked : styled
                          select : select
                size : select tag에만 유효하며, 블럭 박스를 사용하고자 할때 줄수를 지정한다.
                click : onclick 이벤트에 사용될 javascript 함수를 작성한다.
                change : onchange 이벤트에 사용될 javascript 함수를 작성한다.
                defaultOption : select tag에만 유효하며, 선택된 값이 없을 경우의 텍스트를 입력한다.
                          기본값 : 다국어관리의 common.defaultOption 다국어코드 값이 사용된다.
                etc : 위에서 지정한 이외의 것을 활용하기 위한 여분으로 입력된 그대로 태그에 포함한다.
                
            코드목록 예 : &lt;op:cdId type="select" hghrkCdId="testTopCode" cdId="testCode" choice="AA" id="test" values="${dataVo.testList}" /&gt;
            코드명 예 : &lt;op:cdId hghrkCdId="testTopCode" cdId="testCode" /&gt;

            * list 의 경우는 UI 적으로 활용도를 고려하여 request 객체에 'OpResultCodeList' 이름으로 저장되며,
              아래와 같이 활용할 수 있다. 
              단! 아래 처럼 op:cdId tag를 먼저 선언후에 사용한다.

             사용예 : 우선 아랫줄의 코드 태그를 사용한 후 이후 jsp 화면에서 사용한다.
             &lt;op:cdId type="list" hghrkCdId="testTopCode" cdId="testCode" values="코드값들" /&gt;

             JSP 코드
             List&lt;CodeCacheVO&gt; resultCodeList = (List&lt;CodeCacheVO&gt;)request.getAttribute("OpResultCodeList");
             JSTL 코드
             &lt;c:forEach var="codeVo" items="${OpResultCodeList}" &gt;
                ${codeVo.cdId} ${codeVo.cdNm}  ${codeVo.cdExpln} ...
             &lt;/c:forEach&gt;
        </pre>
        ]]>
        </description>
        <name>cdId</name>
        <tag-class>zesinc.web.support.tag.code.CdIdTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>text(default) | select | checkbox | radio</description>
            <name>type</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>cdId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>hghrkCdId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>choice</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>values</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>labelClass</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>tagClass</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>size</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>click</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>change</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>defaultOption</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>etc</name>
            <required>false</required>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            다국어관리 기능에서 사이트 설정상의 언어설정에 따라 해당 코드의 메시지를 찾아서 문자열을 반환한다.
            사용 예 : &lt;op:message cdId="common.noData" /&gt;
        </pre>
        ]]>
        </description>
        <name>message</name>
        <tag-class>zesinc.web.support.tag.message.MessageTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>cdId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            엑셀파일 내용을 테이블 형태로 반환
            예 : &lt;op:excelToTable headerNm="${headerNm}" headerId="${headerId}" /&gt;
            headerNm : 한글명 배열 ex ['이름','아이디','성별'] (필수)
            headerId : 영문명 배열 ex ['name','id','gender'] (필수)
            page : 별도 UI 사용시
                  기본값 : excel/excelList.jsp (실제경로 /jsp/common/taglib/excel/excelList.jsp)
            rowNo : 읽어올 row수의 제한 (기본값 : 500)
            inputUseYn : input의 사용여부(Y/N) (기본값 : N)
            size : input사이즈 및 HTML TABLE 의 컬럼 사이즈(S,M,L) (기본값 : M)
            headerLineCnt : 헤더 포함 여부 (기본값 : 0)
                            0이면 미포함엑셀(전체row를 읽음)
                            헤더를 포함할 경우 헤더줄 수 만큼 입력(헤더줄 수 만큼 읽지않음) (0,1,2,3....)
        </pre>
        ]]>
        </description>
        <name>excelToTable</name>
        <tag-class>zesinc.web.support.tag.excel.upload.ExcelToTableTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>headerNm</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>headerId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>rowNo</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>inputUseYn</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>page</name>
            <required>false</required>
        </attribute>
        <attribute>
            <name>size</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>headerLineCnt</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            파일 업로드 폼 자동생성 
            미입력시 기본 값은 /config/commons/system-commons-config.xml 파일 fileUpload 설정을 참조한다.

            아래 예는 아무것도 입력하지 않은 경우의 기본값이다.
            예 : &lt;op:fileUpload view="basic" name="fileInput" fileIdNm="fileIds" count="1" size="2M" maxSize="5M" exts="jpg,jpeg,gif,png" fileList="${dataVo.fileList} /&gt;

            view : 업로드를 사용할 방식을 설정
                     - basic : 기본 폼 사용
                     - multi : jquery multifile 사용
                     - uploader : html5 업로드 플러그인 사용
            name : 폼이름
            count : 첨부가능 파일 갯수
            size : 단일 파일 최대용량을 byte 단위로 입력한다.
                    ( K,M,G 를 사용할 수 있으며 각각 kilo, mega, giga의 뜻으로  2M은 2 MegaByte 이다.)
            maxSize : 전체 파일 최대용량을 byte 단위로 입력한다.
                    ( K,M,G 를 사용할 수 있으며 각각 kilo, mega, giga의 뜻으로  5M은 5 MegaByte 이다.)
            fileIdNm : 파일폼이 여러개인경우 각각의 삭제 대상 파일 일련번호 명칭(변수명)을 따로 설정한다. 기본값은 fileIds
            exts : 첨부가능 파일 확장자 ',' 쉼표로 구분하여 작성 
            fileList : FileVO 객체 목록 (기존 등록파일 목록)
            needDc : 파일설명 입력상자 생성 여부. 이미지 파일의 경우 alt 값으로 사용될 수 있다.
                    ( true/false 를 사용할 수 있으며, 기본값은 false 이다.)
            page : 별도 UI 사용시
                  기본값 : file/basic.jsp (실제경로 /jsp/common/taglib/file/basic.jsp)
        </pre>
        ]]>
        </description>
        <name>fileUpload</name>
        <tag-class>zesinc.web.support.tag.file.FileUploadTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>view</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>count</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>size</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>maxSize</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>fileIdNm</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>exts</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>fileList</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>needDc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>page</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            파일 다운로드 화면 자동생성 

            기본 예 : &lt;op:fileDownoad fileList="${dataVo.fileList} name="fileInput" /&gt;

            fileList : FileVO 객체 목록
            name : 폼이름.
                      파일등록당시의 &lt;input type="file" name="fileInput" /&gt; 태그의 name 부분에 해당하는 명칭
                      또는 &lt;op:fileUpload name="fileInput" /&gt; 태그의 name 부분에 해당하는 명칭
            page : 별도 UI 사용시
                  기본값 : file/download.jsp (실제경로 /jsp/common/taglib/file/download.jsp)
        </pre>
        ]]>
        </description>
        <name>fileDownload</name>
        <tag-class>zesinc.web.support.tag.file.FileDownloadTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>fileList</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>page</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            엑셀 다운로드 script 자동생성 
            예 : &lt;op:excelDown excelKey="key값" excelFileNm="파일명" searchAt="Y" btnId="id값" /&gt;
            excelKey(필수) : excel-commons-config.xml 에 정의한 key값
            excelFileNm : 미입력시 excel-commons-config.xml 에 정의된 파일명으로 대체
            searchAt : 검색조건여부 (기본값 : 미사용 'N')
                      사용('Y')일 경우 dataForm에 있는 q_로 시작되는 검색조건이 추가됨
            btnId(필수) : 출력버튼의 ID값
        </pre>
        ]]>
        </description>
        <name>excelDown</name>
        <tag-class>zesinc.web.support.tag.excel.download.ExcelDownload</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>excelKey</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>excelFileNm</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>searchAt</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>btnId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            각 메뉴에 대한 도움말을 표시
            예 : &lt;op:help menuCode="MenuCode" /&gt;
            menuCode(필수) : 메뉴코드
        </pre>
        ]]>
        </description>
        <name>help</name>
        <tag-class>zesinc.web.support.tag.help.HelpTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>menuCode</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            회원등급 코드 또는 회원ID 설정에 따라 태그 내의 body 내용을 화면에 출력할지 말지를 결정하여 표시한다.
            회원등급은 쉼표 (,)로 구분하여 복수의 등급을 설정할 수 있다.

            예 : &lt;op:userAuth userId="userId"&gt;화면에표시될 내용&lt;/op:userAuth&gt;
            예 : &lt;op:userAuth grads="dong,dong1" userId="testuser"&gt;화면에표시될 내용&lt;/op:userAuth&gt;

            grads(선택) : 회원관리에서 부여되는 회원등급 코드
            userId(선택) : 로그인 계정의 ID와 비교할 담당자ID. (로그인 계정ID와 인자의 담당자ID가 같은 경우 출력)
        </pre>
        ]]>
        </description>
        <name>userAuth</name>
        <tag-class>zesinc.web.support.tag.auth.UserAuthTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>
                회원등급 코드 쉼표(,)로 구분하여 복수 설정 가능
            </description>
            <name>grads</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>로그인한 회원ID 비교할 회원ID</description>
            <name>userId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
        <![CDATA[
        <pre>
            예 : &lt;op:adres btnClass="adresPopBtn" zip="zip" adres="userAddr" adres2="daddr" /&gt;
            btnClass : 팝업 버튼 클래스 (기본값 : adresPopBtn)
            zip : 우편번호 클래스 (기본값 : zip)
            adres : 주소1 클래스 (기본값 : userAddr)
            adres2 : 주소2 클래스 (기본값 : daddr)
        </pre>
        ]]>
        </description>
        <name>adres</name>
        <tag-class>zesinc.web.support.tag.adres.AdresTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>btnClass</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
        </attribute>
        <attribute>
            <name>zip</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
        </attribute>
        <attribute>
            <name>adres</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
        </attribute>
        <attribute>
            <name>adres2</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
        </attribute>
    </tag>
</taglib>